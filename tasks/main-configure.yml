---
- hosts: "{{ host }}"
  sudo: true
  gather_facts: false

  vars_files:
    - "../ansible.plone_server/defaults/main.yml"
    - "../defaults/main.yml"
    - "../hosts/port_base.yml"
    - "../hosts/{{ host }}-vars.yml"

  tasks:

    ### Bika dependencies ######################################################

    - name: Bika dependencies - Install
      apt: pkg={{ item }} state=present
      with_items:
        - libffi-dev
        - gcc
        - zlib1g-dev
        - libexpat1-dev
        - libxslt1.1
        - gnuplot
        - libpcre3
        - libpcre3-dev
        - libcairo2
        - libpango1.0-0
        - libgdk-pixbuf2.0-0
        - ssl-cert
        - nginx
        - varnish

    ### Create Plone zeocluster and Plone site #################################

    - include: ../ansible.plone_server/tasks/main.yml
      tags:
        - plone

    # Run the command if the specified file does not exist.
    - name: Ensure that admin user is created
      command: bin/client_reserved adduser admin {{ plone_initial_password }}
      args:
        chdir: "{{ plone_target_path }}/{{ plone_instance_name }}"
      tags:
        - plone

    ### nginx server ###########################################################

    - name: nginx - Install
      apt: pkg=nginx state=present
      tags:
        - nginx

    - name: nginx - /etc/nginx/proxy_params.conf
      template:
        src=../templates/nginx-proxy_params.conf.j2
        dest=/etc/nginx/proxy_params.conf
      tags:
        - nginx

    ### nginx site #############################################################

    - name: Add to sites-available
      template:
        src=../templates/nginx-site.conf.j2
        dest=/etc/nginx/sites-available/{{ host }}.conf
      notify: restart nginx
      tags:
        - nginx

    - name: Add to sites-enabled
      file:
        src=/etc/nginx/sites-available/{{ host }}.conf
        dest=/etc/nginx/sites-enabled/{{ host }}.conf
        state=link
      notify: restart nginx
      tags:
        - nginx

    ### varnish server #########################################################

    - name: varnish - /etc/varnish/default.vcl
      template:
        src=../templates/varnish-default.vcl.j2
        dest=/etc/varnish/default.vcl
      tags:
        - varnish

    - name: create varnish/sites folder
      file: path=/etc/varnish/sites state=directory
      tags:
        - varnish

    - name: create varnish/sites.vcl
      copy: src=../templates/sites.vcl.j2 dest=/etc/varnish/sites.vcl force=no
      tags:
        - varnish

    ### varnish site ###########################################################

    - name: Add varnish site configuration
      template:
        src=../templates/varnish-site.vcl.j2
        dest=/etc/varnish/sites/{{ host }}.vcl
      notify: restart varnish
      tags:
        - varnish

    - name: add site include to sites.vcl
      lineinfile:
        dest=/etc/varnish/sites.vcl
        regexp='^{{ host }}$'
        insertbefore=BOF
        line='include "/etc/varnish/sites/{{ host }}.vcl";'
      tags:
        - varnish

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart varnish
      service: name=varnish state=restarted

